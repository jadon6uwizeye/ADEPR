# Generated by Django 4.1.5 on 2023-01-10 08:58

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(max_length=100, verbose_name='full name')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='username')),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='phone number')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('about', models.TextField(blank=True, null=True, verbose_name='about')),
                ('user_type', models.IntegerField(choices=[(1, 'User'), (2, 'Administartor')], default=1, verbose_name='user type')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('staff', models.BooleanField(default=False, verbose_name='staff')),
                ('admin', models.BooleanField(default=False, verbose_name='admin')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
    ]
